version: "3.9"
services:
# redis service
    redis:
        image: redis:7.0.8
        container_name: redis-container
        environment:
            - PUID=${UID}
            - PGID=${GID}
        networks:
            back-tier:
                ipv4_address: ${REDIS}
        volumes:
            - /var/lib/redis:/var/lib/redis
        ports:
            - "6379:6379"
        restart: on-failure:3
        #healthcheck:
        #   test: ["CMD-SHELL", "netstat -an | grep -q 6379"]
# mysql service
    mysql:
        image: mysql:8.0.32
        container_name: mysql-container
        environment:
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - TZ=Asia/Seoul
            - PUID=${UID}
            - PGID=${GID}
        volumes:
                - /var/lib/mysql:/var/lib/mysql
        networks:
            back-tier:
                ipv4_address: ${MYSQL}
        ports:
            - "3306:3306"
        restart: on-failure:3
        #healthcheck:
        #    test: ["CMD-SHELL", "netstat -an | grep -q 3306"]
# api gateway
    api-gateway:
        image: ${APIGATEWAY_IMAGE}
        container_name: api-gateway
        environment:
            - PUID=${UID}
            - PGID=${GID}
        networks:
            back-tier:
                ipv4_address: ${APIGATEWAY}
        ports:
            - ${APIGATEWAY_PORT}
        restart: on-failure:3
# user service
    user-service:
        depends_on:
            - mysql
        container_name: user-service
        image: ${USER_SERVICE_IMAGE}
        environment:
            - PUID=${UID}
            - PGID=${GID}
        networks:
            back-tier:
                ipv4_address: ${USER_SERVICE}
        expose:
            - ${USER_SERVICE_PORT}
        restart: on-failure:3
# video service
    video-service:
        depends_on:
            - redis
        container_name: video-service
        image: ${VIDEO_SERVICE_IMAGE}
        environment:
            - PUID=${UID}
            - PGID=${GID}
        networks:
            back-tier:
                ipv4_address: ${VIDEO_SERVICE}
        ports:
            - ${VIDEO_SERVICE_PORT}
        restart: on-failure:3
# like service
    like-service:
        depends_on:
            - redis
        container_name: like-service
        image: ${LIKE_SERVICE_IMAGE}
        environment:
            - PUID=${UID}
            - PGID=${GID}
        networks:
            back-tier:
                ipv4_address: ${LIKE_SERVICE}
        expose:
            - ${LIKE_SERVICE_PORT}
        restart: on-failure:3
# search service
    search-service:
        image: ${SEARCH_SERVICE_IMAGE}
        container_name: search-service
        environment:
            - PUID=${UID}
            - PGID=${GID}
        networks:
            back-tier:
                ipv4_address: ${SEARCH_SERVICE}
        expose:
            - ${SEARCH_SERVICE_PORT}
        restart: on-failure:3
# comment service
    comment-service:
        image: ${COMMENT_SERVICE_IMAGE}
        container_name: comment-service
        environment:
            - PUID=${UID}
            - PGID=${GID}
        networks:
            back-tier:
                ipv4_address: ${COMMENT_SERVICE}
        expose:
            - ${COMMENT_SERVICE_PORT}
        restart: on-failure:3
networks:
    back-tier:
        ipam:
            driver: default
            config:
                - subnet: ${NETWORK_SUBNET}